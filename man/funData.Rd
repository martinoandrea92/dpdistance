% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/funData.R
\name{funData}
\alias{funData}
\title{\code{S3} Class for functional datasets.
A class for univariate or multivariate functional dataset.}
\usage{
funData(grid, data)
}
\arguments{
\item{grid}{the grid (of length \code{T}) over which the functional dataset is defined.}

\item{data}{a vector, a matrix or a \code{list} of \code{d} vectors or matrices containing the functional data.}
}
\value{
The function returns a \code{S3} object of class \code{funData}, containing
the \code{grid} over which the functional dataset is defined and a matrix or a \code{list}
of \code{d} matrices containing the functional data
}
\description{
\code{S3} Class for functional datasets.
A class for univariate or multivariate functional dataset.
}
\examples{
# Define parameters
n <- 50
P <- 100
K <- 150

# Grid of the functional dataset
t <- seq( 0, 1, length.out = P )

# Define the means and the parameters to use in the simulation
# with the Karhunen - LoÃ¨ve expansion
m1 <- t^2 * ( 1 - t )
m2 <- t * ( 1 - t )^2

lambda <- rep( 0, K )
theta <- matrix( 0, K, P )
for ( k in 1:K) {
  lambda[k] <- 1 / ( k + 1 )^2
  if ( k\%\%2 == 0 )
    theta[k, ] <- sqrt( 2 ) * sin( k * pi * t )
  else if ( k\%\%2 != 0 && k != 1 )
    theta[k, ] <- sqrt( 2 ) * cos( ( k - 1 ) * pi * t )
  else
    theta[k, ] <- rep( 1, P )
}
# Simulate the functional data
x1 <- simulate_KL( t, n, m1, rho = lambda, theta = theta )
x2 <- simulate_KL( t, n, m2, rho = lambda, theta = theta )

FD <- funData( t, list( x1, x2 ) )
}
\seealso{
\code{\link{simulate_KL}}
}
